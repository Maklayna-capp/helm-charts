install.go:159: [debug] Original chart version: ""
install.go:176: [debug] CHART PATH: /apps/charts/installer

---
# Source: installer/templates/virtualservice.yaml
# NOTE: short host name is taken from _rule_ namespace, not from _service_ namespace
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: simple
  labels:
    app: RELEASE-NAME
    version: "latest"
spec:
  gateways:
  - staging-wild
  hosts:
  - grpc.staging.streamlayer.io
  http:
  - route:
    - destination:
        host: grpc
        port:
          number: 50051

---
# Source: installer/templates/deployment.yaml

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: simple
  labels:
    app: RELEASE-NAME
    release: RELEASE-NAME
    version: "latest"
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      app: RELEASE-NAME
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-files: 2d270f0ac9069957bc93e1a3144427beaf641ad9d671a1e6c1a30ab4fcba0587
        checksum/config-consul: d09cab8b207b3ca4777f934577c27b6f9098046bb93e5b573180c220666e041c
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9102"
        prometheus.io/scheme: "http"
        prometheus.io/path: "/metrics"
        kiali.io/runtimes: "nodejs"
      labels:
        app: RELEASE-NAME
        version: "latest"
    spec:
      serviceAccountName: "sa"
      initContainers:
      - name: consul-template
        image: hashicorp/consul-template:alpine
        resources:
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 32Mi
            cpu: 10m
        env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        volumeMounts:
        - name: consul-template
          mountPath: /template
        - name: consul-config
          mountPath: /config
        command:
          - sh
          - -ec
          - |
            consul-template -consul-addr="$NODE_IP:8500" -once \
              -template "/template/config.yml:/config/config.yml" \

            cat /config/*
      - env:
        - name: GIT_SYNC_REPO
          value: https://github.com/StreamLayer/sl-chat-auth.git
        - name: GIT_SYNC_USERNAME
          value: user
        - name: GIT_SYNC_PASSWORD
          value: password
        - name: GIT_SYNC_ROOT
          value: /repo
        - name: GIT_SYNC_ONE_TIME
          value: "true"
        image: gcr.io/google_containers/git-sync
        name: sync
        volumeMounts:
        - mountPath: /repo
          name: chat-auth
      containers:
        - name: RELEASE-NAME
          image: "nginx:latest"
          imagePullPolicy: IfNotPresent
          env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: TEST
            value: test
          volumeMounts:
          - name: config
            mountPath: /config
          - name: consul-config
            mountPath: /config
          - mountPath: /some
            name: chat-auth
          command:
          test-command
          args:
          - few
          - args
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: metrics
              port: 9102
              containerPort: 9102
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 100Mi
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: RELEASE-NAME
      volumes:
      - name: consul-template
        configMap:
          name: simple-consul-templates
      - name: consul-config
        emptyDir: {}
      - name: config
        configMap:
          name: simple-config
      - emptyDir: {}
        name: chat-auth


---
# Source: installer/templates/consul.templates.yaml

apiVersion: v1
kind: ConfigMap
metadata:
  name: simple-consul-templates
  labels:
    app: RELEASE-NAME
    version: "latest"
data:
  config.yml: |-
    amqp:
      host: {{ keyOrDefault "staging/amqpHost" "localhost" }}
      password: {{ keyOrDefault "staging/amqpPassword" "password" }}
    redis:
      settings:
        host: {{ keyOrDefault "staging/redisHost" "redishost" }}

---
# Source: installer/templates/config.yaml


apiVersion: v1
kind: ConfigMap
metadata:
  name: simple-config
  labels:
    app: RELEASE-NAME
    version: "latest"
data:
  qwe.txt: |
    some: test
    test: /config


---
# Source: installer/templates/servicemonitor.yaml

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: RELEASE-NAME
  namespace: monitoring
  labels:
    app: RELEASE-NAME
    version: "latest"
spec:
  endpoints:
  - interval: 10s
    port: metrics
    path: /metrics
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app: RELEASE-NAME

---
# Source: installer/templates/service.yaml

apiVersion: v1
kind: Service
metadata:
  name: simple
  labels:
    app: RELEASE-NAME
    version: "latest"
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 9102
      targetPort: metrics
      protocol: TCP
  selector:
    app: RELEASE-NAME

---
# Source: installer/templates/pdb.yaml

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: simple
  labels:
    app: RELEASE-NAME
    version: "latest"
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: RELEASE-NAME
Error: YAML parse error on installer/templates/deployment.yaml: error converting YAML to JSON: yaml: line 101: could not find expected ':'
helm.go:84: [debug] error converting YAML to JSON: yaml: line 101: could not find expected ':'
YAML parse error on installer/templates/deployment.yaml
helm.sh/helm/v3/pkg/releaseutil.(*manifestFile).sort
	/home/circleci/helm.sh/helm/pkg/releaseutil/manifest_sorter.go:146
helm.sh/helm/v3/pkg/releaseutil.SortManifests
	/home/circleci/helm.sh/helm/pkg/releaseutil/manifest_sorter.go:106
helm.sh/helm/v3/pkg/action.(*Configuration).renderResources
	/home/circleci/helm.sh/helm/pkg/action/action.go:159
helm.sh/helm/v3/pkg/action.(*Install).Run
	/home/circleci/helm.sh/helm/pkg/action/install.go:238
main.runInstall
	/home/circleci/helm.sh/helm/cmd/helm/install.go:229
main.newTemplateCmd.func1
	/home/circleci/helm.sh/helm/cmd/helm/template.go:66
github.com/spf13/cobra.(*Command).execute
	/go/pkg/mod/github.com/spf13/cobra@v1.0.0/command.go:842
github.com/spf13/cobra.(*Command).ExecuteC
	/go/pkg/mod/github.com/spf13/cobra@v1.0.0/command.go:950
github.com/spf13/cobra.(*Command).Execute
	/go/pkg/mod/github.com/spf13/cobra@v1.0.0/command.go:887
main.main
	/home/circleci/helm.sh/helm/cmd/helm/helm.go:83
runtime.main
	/usr/local/go/src/runtime/proc.go:203
runtime.goexit
	/usr/local/go/src/runtime/asm_amd64.s:1357
