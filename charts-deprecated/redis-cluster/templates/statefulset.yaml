apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: {{ template "redis-cluster.fullname" . }}
  labels:
    app: {{ template "redis-cluster.name" . }}
    chart: {{ template "redis-cluster.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  serviceName: {{ template "redis-cluster.fullname" . }}
  replicas: {{ .Values.mastersCount }}
  selector:
    matchLabels:
      app: {{ template "redis-cluster.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "redis-cluster.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - redis-server
          args:
            - /conf/redis.conf
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli ping
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - redis-cli ping
            initialDelaySeconds: 5
          volumeMounts:
          - name: conf
            mountPath: /conf
            readOnly: false
          - name: data
            mountPath: /data
            readOnly: false
          ports:
            - name: client
              containerPort: 6379
            - name: gossip
              containerPort: 16379
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if eq .Values.antiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: {{ template "redis-cluster.name" . }}
                  chart: {{ template "redis-cluster.chart" . }}
                  release: {{ .Release.Name }}
      {{- else if eq .Values.antiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: {{ template "redis-cluster.name" . }}
                  chart: {{ template "redis-cluster.chart" . }}
                  release: {{ .Release.Name }}
      {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: conf
        configMap:
          name: {{ template "redis-cluster.fullname" . }}
          items: 
          - key: redis.conf
            path: redis.conf
      - name: data
        emptyDir: {}