apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "microfleet.fullname" . }}
  labels:
    release: {{ .Release.Name }}
    version: {{ .Values.image.tag }}
    helm.sh/chart: {{ include "microfleet.chart" . }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ include "microfleet.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  podManagementPolicy: Parallel
  serviceName: ""
  replicas: {{ .Values.replicaCount }}
{{- if .Values.updateStrategy }}
  updateStrategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
{{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "microfleet.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "{{ .Values.meshEnabled }}"
      labels:
        release: {{ .Release.Name }}
        version: {{ .Values.image.tag }}
        app.kubernetes.io/name: {{ include "microfleet.name" . }}
        helm.sh/chart: {{ include "microfleet.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      {{- if eq .Values.serviceAccountName "" }}
      automountServiceAccountToken: false
      {{- else }}
      serviceAccountName: "{{ .Values.serviceAccountName }}"
      {{- end }}
      {{- if or .Values.initContainers .Values.consul.templates }}
      initContainers:
      {{- if .Values.consul.templates }}
      - name: consul-template
        image: hashicorp/consul-template:alpine
        env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        volumeMounts:
        - name: consul-template
          mountPath: /template
        - name: consul-config
          mountPath: /config
        command:
          - sh
          - -ec
          - |
            consul-template -consul-addr="$NODE_IP:8500" -once \
            {{- range $filename, $content := .Values.consul.templates }}
              -template "/template/{{ $filename }}:/config/{{ $filename }}" \
            {{- end }}
            
            cat /config/*
      {{- end }}
      {{- if .Values.initContainers }}
{{ toYaml .Values.initContainers | indent 6 }}
      {{- end }}
      {{- end }}
      containers:
        - name: microservice
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
        {{- if .Values.env }}
{{ toYaml .Values.env | indent 10 }}
        {{- end }}
        {{- if or .Values.volumeMounts .Values.consul.templates .Values.config.files }}
          volumeMounts:
          {{- if .Values.config.files }}
          - name: config
            mountPath: {{ .Values.config.path }}
          {{- end }}
          {{- if .Values.consul.templates }}
          - name: consul-config
            mountPath: {{ .Values.consul.path }}
          {{- end }}
          {{- if .Values.volumeMounts }}
{{ toYaml .Values.volumeMounts | indent 10 }}
          {{- end }}
          {{- end }}
          {{- if .Values.command }}
          command:
{{ toYaml .Values.command | indent 10 }}
          {{- end }}
          {{- if .Values.args }}
          args:
{{ toYaml .Values.args | indent 10 }}
          {{- end }}
          {{- if .Values.service.ports }}
          ports:
          {{- range .Values.service.ports }}
            - name: {{ .name }}
              containerPort: {{ default .port .targetPort }}
              protocol: {{ default "TCP" .protocol }}
          {{- end }}
          {{- end }}

          {{- if .Values.health }}
          livenessProbe:
            httpGet:
{{ toYaml .Values.health | indent 14 }}
          readinessProbe:
            httpGet:
{{ toYaml .Values.health | indent 14 }}
          {{- end }}
          
          {{- if .Values.resources }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- end }}

    {{- if .Values.affinity }}
      affinity:
        {{ tpl .Values.affinity . | indent 8 | trim }}
    {{- end }}
      {{- if or .Values.volumes .Values.consul.templates .Values.config.files }}
      volumes:
      {{- if .Values.consul.templates }}
      - name: consul-template
        configMap:
          name: {{ include "microfleet.fullname" . }}-consul-templates
      - name: consul-config
        emptyDir: {}
      {{- end }}
      {{- if .Values.config.files }}
      - name: config
        configMap:
          name: {{ include "microfleet.fullname" . }}-config
      {{- end }}
      {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 6 }}
      {{- end }}
      {{- end }}